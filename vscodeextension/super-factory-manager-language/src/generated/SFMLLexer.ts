// Generated from ./syntaxes/SFML.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class SFMLLexer extends Lexer {
	public static readonly IF = 1;
	public static readonly THEN = 2;
	public static readonly ELSE = 3;
	public static readonly HAS = 4;
	public static readonly OVERALL = 5;
	public static readonly SOME = 6;
	public static readonly ONE = 7;
	public static readonly LONE = 8;
	public static readonly TRUE = 9;
	public static readonly FALSE = 10;
	public static readonly NOT = 11;
	public static readonly AND = 12;
	public static readonly OR = 13;
	public static readonly GT = 14;
	public static readonly GT_SYMBOL = 15;
	public static readonly LT = 16;
	public static readonly LT_SYMBOL = 17;
	public static readonly EQ = 18;
	public static readonly EQ_SYMBOL = 19;
	public static readonly LE = 20;
	public static readonly LE_SYMBOL = 21;
	public static readonly GE = 22;
	public static readonly GE_SYMBOL = 23;
	public static readonly MOVE = 24;
	public static readonly FROM = 25;
	public static readonly TO = 26;
	public static readonly INPUT = 27;
	public static readonly OUTPUT = 28;
	public static readonly WHERE = 29;
	public static readonly SLOTS = 30;
	public static readonly RETAIN = 31;
	public static readonly EACH = 32;
	public static readonly EXCEPT = 33;
	public static readonly FORGET = 34;
	public static readonly WITHOUT = 35;
	public static readonly WITH = 36;
	public static readonly TAG = 37;
	public static readonly HASHTAG = 38;
	public static readonly ROUND = 39;
	public static readonly ROBIN = 40;
	public static readonly BY = 41;
	public static readonly LABEL = 42;
	public static readonly BLOCK = 43;
	public static readonly TOP = 44;
	public static readonly BOTTOM = 45;
	public static readonly NORTH = 46;
	public static readonly EAST = 47;
	public static readonly SOUTH = 48;
	public static readonly WEST = 49;
	public static readonly SIDE = 50;
	public static readonly TICKS = 51;
	public static readonly TICK = 52;
	public static readonly SECONDS = 53;
	public static readonly REDSTONE = 54;
	public static readonly PULSE = 55;
	public static readonly DO = 56;
	public static readonly WORLD = 57;
	public static readonly PROGRAM = 58;
	public static readonly END = 59;
	public static readonly NAME = 60;
	public static readonly EVERY = 61;
	public static readonly COMMA = 62;
	public static readonly COLON = 63;
	public static readonly SLASH = 64;
	public static readonly DASH = 65;
	public static readonly LPAREN = 66;
	public static readonly RPAREN = 67;
	public static readonly IDENTIFIER = 68;
	public static readonly NUMBER = 69;
	public static readonly STRING = 70;
	public static readonly LINE_COMMENT = 71;
	public static readonly WS = 72;
	public static readonly UNUSED = 73;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"IF", "THEN", "ELSE", "HAS", "OVERALL", "SOME", "ONE", "LONE", "TRUE", 
		"FALSE", "NOT", "AND", "OR", "GT", "GT_SYMBOL", "LT", "LT_SYMBOL", "EQ", 
		"EQ_SYMBOL", "LE", "LE_SYMBOL", "GE", "GE_SYMBOL", "MOVE", "FROM", "TO", 
		"INPUT", "OUTPUT", "WHERE", "SLOTS", "RETAIN", "EACH", "EXCEPT", "FORGET", 
		"WITHOUT", "WITH", "TAG", "HASHTAG", "ROUND", "ROBIN", "BY", "LABEL", 
		"BLOCK", "TOP", "BOTTOM", "NORTH", "EAST", "SOUTH", "WEST", "SIDE", "TICKS", 
		"TICK", "SECONDS", "REDSTONE", "PULSE", "DO", "WORLD", "PROGRAM", "END", 
		"NAME", "EVERY", "COMMA", "COLON", "SLASH", "DASH", "LPAREN", "RPAREN", 
		"IDENTIFIER", "NUMBER", "STRING", "LINE_COMMENT", "WS", "UNUSED", "A", 
		"B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", 
		"P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, "'>'", undefined, "'<'", undefined, "'='", undefined, "'<='", 
		undefined, "'>='", undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "'#'", undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, "','", "':'", "'/'", 
		"'-'", "'('", "')'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "IF", "THEN", "ELSE", "HAS", "OVERALL", "SOME", "ONE", "LONE", 
		"TRUE", "FALSE", "NOT", "AND", "OR", "GT", "GT_SYMBOL", "LT", "LT_SYMBOL", 
		"EQ", "EQ_SYMBOL", "LE", "LE_SYMBOL", "GE", "GE_SYMBOL", "MOVE", "FROM", 
		"TO", "INPUT", "OUTPUT", "WHERE", "SLOTS", "RETAIN", "EACH", "EXCEPT", 
		"FORGET", "WITHOUT", "WITH", "TAG", "HASHTAG", "ROUND", "ROBIN", "BY", 
		"LABEL", "BLOCK", "TOP", "BOTTOM", "NORTH", "EAST", "SOUTH", "WEST", "SIDE", 
		"TICKS", "TICK", "SECONDS", "REDSTONE", "PULSE", "DO", "WORLD", "PROGRAM", 
		"END", "NAME", "EVERY", "COMMA", "COLON", "SLASH", "DASH", "LPAREN", "RPAREN", 
		"IDENTIFIER", "NUMBER", "STRING", "LINE_COMMENT", "WS", "UNUSED",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(SFMLLexer._LITERAL_NAMES, SFMLLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return SFMLLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	    public  INCLUDE_UNUSED = false; // we want syntax highlighting to not break on unexpected tokens


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(SFMLLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "SFML.g4"; }

	// @Override
	public get ruleNames(): string[] { return SFMLLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return SFMLLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return SFMLLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return SFMLLexer.modeNames; }

	// @Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 72:
			return this.UNUSED_sempred(_localctx, predIndex);
		}
		return true;
	}
	private UNUSED_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return this.INCLUDE_UNUSED;
		}
		return true;
	}

	private static readonly _serializedATNSegments: number = 2;
	private static readonly _serializedATNSegment0: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02K\u0268\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04" +
		"O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x04V\tV\x04W\tW\x04" +
		"X\tX\x04Y\tY\x04Z\tZ\x04[\t[\x04\\\t\\\x04]\t]\x04^\t^\x04_\t_\x04`\t" +
		"`\x04a\ta\x04b\tb\x04c\tc\x04d\td\x03\x02\x03\x02\x03\x02\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03" +
		"\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\r\x03" +
		"\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13" +
		"\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x17" +
		"\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19" +
		"\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B" +
		"\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D" +
		"\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E" +
		"\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03" +
		" \x03 \x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03\"\x03\"\x03\"\x03\"" +
		"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03#\x03#\x03#\x03$\x03$\x03$\x03" +
		"$\x03$\x03$\x03$\x03$\x03%\x03%\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03" +
		"\'\x03\'\x03(\x03(\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x03)\x03)\x03)\x03" +
		"*\x03*\x03*\x03+\x03+\x03+\x03+\x03+\x03+\x03,\x03,\x03,\x03,\x03,\x03" +
		",\x03-\x03-\x03-\x03-\x03.\x03.\x03.\x03.\x03.\x03.\x03.\x03/\x03/\x03" +
		"/\x03/\x03/\x03/\x030\x030\x030\x030\x030\x031\x031\x031\x031\x031\x03" +
		"1\x032\x032\x032\x032\x032\x033\x033\x033\x033\x033\x034\x034\x034\x03" +
		"4\x034\x034\x035\x035\x035\x035\x035\x036\x036\x036\x036\x036\x036\x03" +
		"6\x036\x037\x037\x037\x037\x037\x037\x037\x037\x037\x038\x038\x038\x03" +
		"8\x038\x038\x039\x039\x039\x03:\x03:\x03:\x03:\x03:\x03:\x03;\x03;\x03" +
		";\x03;\x03;\x03;\x03;\x03;\x03<\x03<\x03<\x03<\x03=\x03=\x03=\x03=\x03" +
		"=\x03>\x03>\x03>\x03>\x03>\x03>\x03?\x03?\x03@\x03@\x03A\x03A\x03B\x03" +
		"B\x03C\x03C\x03D\x03D\x03E\x03E\x07E\u0206\nE\fE\x0EE\u0209\vE\x03E\x05" +
		"E\u020C\nE\x03F\x06F\u020F\nF\rF\x0EF\u0210\x03G\x03G\x03G\x03G\x07G\u0217" +
		"\nG\fG\x0EG\u021A\vG\x03G\x03G\x03H\x03H\x03H\x03H\x07H\u0222\nH\fH\x0E" +
		"H\u0225\vH\x03H\x03H\x03I\x06I\u022A\nI\rI\x0EI\u022B\x03I\x03I\x03J\x03" +
		"J\x03J\x03J\x03J\x03K\x03K\x03L\x03L\x03M\x03M\x03N\x03N\x03O\x03O\x03" +
		"P\x03P\x03Q\x03Q\x03R\x03R\x03S\x03S\x03T\x03T\x03U\x03U\x03V\x03V\x03" +
		"W\x03W\x03X\x03X\x03Y\x03Y\x03Z\x03Z\x03[\x03[\x03\\\x03\\\x03]\x03]\x03" +
		"^\x03^\x03_\x03_\x03`\x03`\x03a\x03a\x03b\x03b\x03c\x03c\x03d\x03d\x02" +
		"\x02\x02e\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02" +
		"\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02" +
		"\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02" +
		"\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02" +
		"\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(" +
		"O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x02" +
		"4g\x025i\x026k\x027m\x028o\x029q\x02:s\x02;u\x02<w\x02=y\x02>{\x02?}\x02" +
		"@\x7F\x02A\x81\x02B\x83\x02C\x85\x02D\x87\x02E\x89\x02F\x8B\x02G\x8D\x02" +
		"H\x8F\x02I\x91\x02J\x93\x02K\x95\x02\x02\x97\x02\x02\x99\x02\x02\x9B\x02" +
		"\x02\x9D\x02\x02\x9F\x02\x02\xA1\x02\x02\xA3\x02\x02\xA5\x02\x02\xA7\x02" +
		"\x02\xA9\x02\x02\xAB\x02\x02\xAD\x02\x02\xAF\x02\x02\xB1\x02\x02\xB3\x02" +
		"\x02\xB5\x02\x02\xB7\x02\x02\xB9\x02\x02\xBB\x02\x02\xBD\x02\x02\xBF\x02" +
		"\x02\xC1\x02\x02\xC3\x02\x02\xC5\x02\x02\xC7\x02\x02\x03\x02\"\x06\x02" +
		",,C\\aac|\x07\x02,,2;C\\aac|\x03\x022;\x03\x02$$\x04\x02\f\f\x0F\x0F\x05" +
		"\x02\v\f\x0F\x0F\"\"\x04\x02CCcc\x04\x02DDdd\x04\x02EEee\x04\x02FFff\x04" +
		"\x02GGgg\x04\x02HHhh\x04\x02IIii\x04\x02JJjj\x04\x02KKkk\x04\x02LLll\x04" +
		"\x02MMmm\x04\x02NNnn\x04\x02OOoo\x04\x02PPpp\x04\x02QQqq\x04\x02RRrr\x04" +
		"\x02SSss\x04\x02TTtt\x04\x02UUuu\x04\x02VVvv\x04\x02WWww\x04\x02XXxx\x04" +
		"\x02YYyy\x04\x02ZZzz\x04\x02[[{{\x04\x02\\\\||\x02\u0254\x02\x03\x03\x02" +
		"\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02" +
		"\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02" +
		"\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02" +
		"\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02" +
		"\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02" +
		"\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02" +
		")\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
		"\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03" +
		"\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02" +
		"\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02" +
		"K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02" +
		"\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02" +
		"\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03" +
		"\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02" +
		"\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02" +
		"m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02q\x03\x02\x02\x02\x02s\x03\x02" +
		"\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02\x02\x02\x02y\x03\x02\x02\x02" +
		"\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02\x02\x7F\x03\x02\x02\x02\x02" +
		"\x81\x03\x02\x02\x02\x02\x83\x03\x02\x02\x02\x02\x85\x03\x02\x02\x02\x02" +
		"\x87\x03\x02\x02\x02\x02\x89\x03\x02\x02\x02\x02\x8B\x03\x02\x02\x02\x02" +
		"\x8D\x03\x02\x02\x02\x02\x8F\x03\x02\x02\x02\x02\x91\x03\x02\x02\x02\x02" +
		"\x93\x03\x02\x02\x02\x03\xC9\x03\x02\x02\x02\x05\xCC\x03\x02\x02\x02\x07" +
		"\xD1\x03\x02\x02\x02\t\xD6\x03\x02\x02\x02\v\xDA\x03\x02\x02\x02\r\xE2" +
		"\x03\x02\x02\x02\x0F\xE7\x03\x02\x02\x02\x11\xEB\x03\x02\x02\x02\x13\xF0" +
		"\x03\x02\x02\x02\x15\xF5\x03\x02\x02\x02\x17\xFB\x03\x02\x02\x02\x19\xFF" +
		"\x03\x02\x02\x02\x1B\u0103\x03\x02\x02\x02\x1D\u0106\x03\x02\x02\x02\x1F" +
		"\u0109\x03\x02\x02\x02!\u010B\x03\x02\x02\x02#\u010E\x03\x02\x02\x02%" +
		"\u0110\x03\x02\x02\x02\'\u0113\x03\x02\x02\x02)\u0115\x03\x02\x02\x02" +
		"+\u0118\x03\x02\x02\x02-\u011B\x03\x02\x02\x02/\u011E\x03\x02\x02\x02" +
		"1\u0121\x03\x02\x02\x023\u0126\x03\x02\x02\x025\u012B\x03\x02\x02\x02" +
		"7\u012E\x03\x02\x02\x029\u0134\x03\x02\x02\x02;\u013B\x03\x02\x02\x02" +
		"=\u0141\x03\x02\x02\x02?\u0147\x03\x02\x02\x02A\u014E\x03\x02\x02\x02" +
		"C\u0153\x03\x02\x02\x02E\u015A\x03\x02\x02\x02G\u0161\x03\x02\x02\x02" +
		"I\u0169\x03\x02\x02\x02K\u016E\x03\x02\x02\x02M\u0172\x03\x02\x02\x02" +
		"O\u0174\x03\x02\x02\x02Q\u017A\x03\x02\x02\x02S\u0180\x03\x02\x02\x02" +
		"U\u0183\x03\x02\x02\x02W\u0189\x03\x02\x02\x02Y\u018F\x03\x02\x02\x02" +
		"[\u0193\x03\x02\x02\x02]\u019A\x03\x02\x02\x02_\u01A0\x03\x02\x02\x02" +
		"a\u01A5\x03\x02\x02\x02c\u01AB\x03\x02\x02\x02e\u01B0\x03\x02\x02\x02" +
		"g\u01B5\x03\x02\x02\x02i\u01BB\x03\x02\x02\x02k\u01C0\x03\x02\x02\x02" +
		"m\u01C8\x03\x02\x02\x02o\u01D1\x03\x02\x02\x02q\u01D7\x03\x02\x02\x02" +
		"s\u01DA\x03\x02\x02\x02u\u01E0\x03\x02\x02\x02w\u01E8\x03\x02\x02\x02" +
		"y\u01EC\x03\x02\x02\x02{\u01F1\x03\x02\x02\x02}\u01F7\x03\x02\x02\x02" +
		"\x7F\u01F9\x03\x02\x02\x02\x81\u01FB\x03\x02\x02\x02\x83\u01FD\x03\x02" +
		"\x02\x02\x85\u01FF\x03\x02\x02\x02\x87\u0201\x03\x02\x02\x02\x89\u020B" +
		"\x03\x02\x02\x02\x8B\u020E\x03\x02\x02\x02\x8D\u0212\x03\x02\x02\x02\x8F" +
		"\u021D\x03\x02\x02\x02\x91\u0229\x03\x02\x02\x02\x93\u022F\x03\x02\x02" +
		"\x02\x95\u0234\x03\x02\x02\x02\x97\u0236\x03\x02\x02\x02\x99\u0238\x03" +
		"\x02\x02\x02\x9B\u023A\x03\x02\x02\x02\x9D\u023C\x03\x02\x02\x02\x9F\u023E" +
		"\x03\x02\x02\x02\xA1\u0240\x03\x02\x02\x02\xA3\u0242\x03\x02\x02\x02\xA5" +
		"\u0244\x03\x02\x02\x02\xA7\u0246\x03\x02\x02\x02\xA9\u0248\x03\x02\x02" +
		"\x02\xAB\u024A\x03\x02\x02\x02\xAD\u024C\x03\x02\x02\x02\xAF\u024E\x03" +
		"\x02\x02\x02\xB1\u0250\x03\x02\x02\x02\xB3\u0252\x03\x02\x02\x02\xB5\u0254" +
		"\x03\x02\x02\x02\xB7\u0256\x03\x02\x02\x02\xB9\u0258\x03\x02\x02\x02\xBB" +
		"\u025A\x03\x02\x02\x02\xBD\u025C\x03\x02\x02\x02\xBF\u025E\x03\x02\x02" +
		"\x02\xC1\u0260\x03\x02\x02\x02\xC3\u0262\x03\x02\x02\x02\xC5\u0264\x03" +
		"\x02\x02\x02\xC7\u0266\x03\x02\x02\x02\xC9\xCA\x05\xA5S\x02\xCA\xCB\x05" +
		"\x9FP\x02\xCB\x04\x03\x02\x02\x02\xCC\xCD\x05\xBB^\x02\xCD\xCE\x05\xA3" +
		"R\x02\xCE\xCF\x05\x9DO\x02\xCF\xD0\x05\xAFX\x02\xD0\x06\x03\x02\x02\x02" +
		"\xD1\xD2\x05\x9DO\x02\xD2\xD3\x05\xABV\x02\xD3\xD4\x05\xB9]\x02\xD4\xD5" +
		"\x05\x9DO\x02\xD5\b\x03\x02\x02\x02\xD6\xD7\x05\xA3R\x02\xD7\xD8\x05\x95" +
		"K\x02\xD8\xD9\x05\xB9]\x02\xD9\n\x03\x02\x02\x02\xDA\xDB\x05\xB1Y\x02" +
		"\xDB\xDC\x05\xBF`\x02\xDC\xDD\x05\x9DO\x02\xDD\xDE\x05\xB7\\\x02\xDE\xDF" +
		"\x05\x95K\x02\xDF\xE0\x05\xABV\x02\xE0\xE1\x05\xABV\x02\xE1\f\x03\x02" +
		"\x02\x02\xE2\xE3\x05\xB9]\x02\xE3\xE4\x05\xB1Y\x02\xE4\xE5\x05\xADW\x02" +
		"\xE5\xE6\x05\x9DO\x02\xE6\x0E\x03\x02\x02\x02\xE7\xE8\x05\xB1Y\x02\xE8" +
		"\xE9\x05\xAFX\x02\xE9\xEA\x05\x9DO\x02\xEA\x10\x03\x02\x02\x02\xEB\xEC" +
		"\x05\xABV\x02\xEC\xED\x05\xB1Y\x02\xED\xEE\x05\xAFX\x02\xEE\xEF\x05\x9D" +
		"O\x02\xEF\x12\x03\x02\x02\x02\xF0\xF1\x05\xBB^\x02\xF1\xF2\x05\xB7\\\x02" +
		"\xF2\xF3\x05\xBD_\x02\xF3\xF4\x05\x9DO\x02\xF4\x14\x03\x02\x02\x02\xF5" +
		"\xF6\x05\x9FP\x02\xF6\xF7\x05\x95K\x02\xF7\xF8\x05\xABV\x02\xF8\xF9\x05" +
		"\xB9]\x02\xF9\xFA\x05\x9DO\x02\xFA\x16\x03\x02\x02\x02\xFB\xFC\x05\xAF" +
		"X\x02\xFC\xFD\x05\xB1Y\x02\xFD\xFE\x05\xBB^\x02\xFE\x18\x03\x02\x02\x02" +
		"\xFF\u0100\x05\x95K\x02\u0100\u0101\x05\xAFX\x02\u0101\u0102\x05\x9BN" +
		"\x02\u0102\x1A\x03\x02\x02\x02\u0103\u0104\x05\xB1Y\x02\u0104\u0105\x05" +
		"\xB7\\\x02\u0105\x1C\x03\x02\x02\x02\u0106\u0107\x05\xA1Q\x02\u0107\u0108" +
		"\x05\xBB^\x02\u0108\x1E\x03\x02\x02\x02\u0109\u010A\x07@\x02\x02\u010A" +
		" \x03\x02\x02\x02\u010B\u010C\x05\xABV\x02\u010C\u010D\x05\xBB^\x02\u010D" +
		"\"\x03\x02\x02\x02\u010E\u010F\x07>\x02\x02\u010F$\x03\x02\x02\x02\u0110" +
		"\u0111\x05\x9DO\x02\u0111\u0112\x05\xB5[\x02\u0112&\x03\x02\x02\x02\u0113" +
		"\u0114\x07?\x02\x02\u0114(\x03\x02\x02\x02\u0115\u0116\x05\xABV\x02\u0116" +
		"\u0117\x05\x9DO\x02\u0117*\x03\x02\x02\x02\u0118\u0119\x07>\x02\x02\u0119" +
		"\u011A\x07?\x02\x02\u011A,\x03\x02\x02\x02\u011B\u011C\x05\xA1Q\x02\u011C" +
		"\u011D\x05\x9DO\x02\u011D.\x03\x02\x02\x02\u011E\u011F\x07@\x02\x02\u011F" +
		"\u0120\x07?\x02\x02\u01200\x03\x02\x02\x02\u0121\u0122\x05\xADW\x02\u0122" +
		"\u0123\x05\xB1Y\x02\u0123\u0124\x05\xBF`\x02\u0124\u0125\x05\x9DO\x02" +
		"\u01252\x03\x02\x02\x02\u0126\u0127\x05\x9FP\x02\u0127\u0128\x05\xB7\\" +
		"\x02\u0128\u0129\x05\xB1Y\x02\u0129\u012A\x05\xADW\x02\u012A4\x03\x02" +
		"\x02\x02\u012B\u012C\x05\xBB^\x02\u012C\u012D\x05\xB1Y\x02\u012D6\x03" +
		"\x02\x02\x02\u012E\u012F\x05\xA5S\x02\u012F\u0130\x05\xAFX\x02\u0130\u0131" +
		"\x05\xB3Z\x02\u0131\u0132\x05\xBD_\x02\u0132\u0133\x05\xBB^\x02\u0133" +
		"8\x03\x02\x02\x02\u0134\u0135\x05\xB1Y\x02\u0135\u0136\x05\xBD_\x02\u0136" +
		"\u0137\x05\xBB^\x02\u0137\u0138\x05\xB3Z\x02\u0138\u0139\x05\xBD_\x02" +
		"\u0139\u013A\x05\xBB^\x02\u013A:\x03\x02\x02\x02\u013B\u013C\x05\xC1a" +
		"\x02\u013C\u013D\x05\xA3R\x02\u013D\u013E\x05\x9DO\x02\u013E\u013F\x05" +
		"\xB7\\\x02\u013F\u0140\x05\x9DO\x02\u0140<\x03\x02\x02\x02\u0141\u0142" +
		"\x05\xB9]\x02\u0142\u0143\x05\xABV\x02\u0143\u0144\x05\xB1Y\x02\u0144" +
		"\u0145\x05\xBB^\x02\u0145\u0146\x05\xB9]\x02\u0146>\x03\x02\x02\x02\u0147" +
		"\u0148\x05\xB7\\\x02\u0148\u0149\x05\x9DO\x02\u0149\u014A\x05\xBB^\x02" +
		"\u014A\u014B\x05\x95K\x02\u014B\u014C\x05\xA5S\x02\u014C\u014D\x05\xAF" +
		"X\x02\u014D@\x03\x02\x02\x02\u014E\u014F\x05\x9DO\x02\u014F\u0150\x05" +
		"\x95K\x02\u0150\u0151\x05\x99M\x02\u0151\u0152\x05\xA3R\x02\u0152B\x03" +
		"\x02\x02\x02\u0153\u0154\x05\x9DO\x02\u0154\u0155\x05\xC3b\x02\u0155\u0156" +
		"\x05\x99M\x02\u0156\u0157\x05\x9DO\x02\u0157\u0158\x05\xB3Z\x02\u0158" +
		"\u0159\x05\xBB^\x02\u0159D\x03\x02\x02\x02\u015A\u015B\x05\x9FP\x02\u015B" +
		"\u015C\x05\xB1Y\x02\u015C\u015D\x05\xB7\\\x02\u015D\u015E\x05\xA1Q\x02" +
		"\u015E\u015F\x05\x9DO\x02\u015F\u0160\x05\xBB^\x02\u0160F\x03\x02\x02" +
		"\x02\u0161\u0162\x05\xC1a\x02\u0162\u0163\x05\xA5S\x02\u0163\u0164\x05" +
		"\xBB^\x02\u0164\u0165\x05\xA3R\x02\u0165\u0166\x05\xB1Y\x02\u0166\u0167" +
		"\x05\xBD_\x02\u0167\u0168\x05\xBB^\x02\u0168H\x03\x02\x02\x02\u0169\u016A" +
		"\x05\xC1a\x02\u016A\u016B\x05\xA5S\x02\u016B\u016C\x05\xBB^\x02\u016C" +
		"\u016D\x05\xA3R\x02\u016DJ\x03\x02\x02\x02\u016E\u016F\x05\xBB^\x02\u016F" +
		"\u0170\x05\x95K\x02\u0170\u0171\x05\xA1Q\x02\u0171L\x03\x02\x02\x02\u0172" +
		"\u0173\x07%\x02\x02\u0173N\x03\x02\x02\x02\u0174\u0175\x05\xB7\\\x02\u0175" +
		"\u0176\x05\xB1Y\x02\u0176\u0177\x05\xBD_\x02\u0177\u0178\x05\xAFX\x02" +
		"\u0178\u0179\x05\x9BN\x02\u0179P\x03\x02\x02\x02\u017A\u017B\x05\xB7\\" +
		"\x02\u017B\u017C\x05\xB1Y\x02\u017C\u017D\x05\x97L\x02\u017D\u017E\x05" +
		"\xA5S\x02\u017E\u017F\x05\xAFX\x02\u017FR\x03\x02\x02\x02\u0180\u0181" +
		"\x05\x97L\x02\u0181\u0182\x05\xC5c\x02\u0182T\x03\x02\x02\x02\u0183\u0184" +
		"\x05\xABV\x02\u0184\u0185\x05\x95K\x02\u0185\u0186\x05\x97L\x02\u0186" +
		"\u0187\x05\x9DO\x02\u0187\u0188\x05\xABV\x02\u0188V\x03\x02\x02\x02\u0189" +
		"\u018A\x05\x97L\x02\u018A\u018B\x05\xABV\x02\u018B\u018C\x05\xB1Y\x02" +
		"\u018C\u018D\x05\x99M\x02\u018D\u018E\x05\xA9U\x02\u018EX\x03\x02\x02" +
		"\x02\u018F\u0190\x05\xBB^\x02\u0190\u0191\x05\xB1Y\x02\u0191\u0192\x05" +
		"\xB3Z\x02\u0192Z\x03\x02\x02\x02\u0193\u0194\x05\x97L\x02\u0194\u0195" +
		"\x05\xB1Y\x02\u0195\u0196\x05\xBB^\x02\u0196\u0197\x05\xBB^\x02\u0197" +
		"\u0198\x05\xB1Y\x02\u0198\u0199\x05\xADW\x02\u0199\\\x03\x02\x02\x02\u019A" +
		"\u019B\x05\xAFX\x02\u019B\u019C\x05\xB1Y\x02\u019C\u019D\x05\xB7\\\x02" +
		"\u019D\u019E\x05\xBB^\x02\u019E\u019F\x05\xA3R\x02\u019F^\x03\x02\x02" +
		"\x02\u01A0\u01A1\x05\x9DO\x02\u01A1\u01A2\x05\x95K\x02\u01A2\u01A3\x05" +
		"\xB9]\x02\u01A3\u01A4\x05\xBB^\x02\u01A4`\x03\x02\x02\x02\u01A5\u01A6" +
		"\x05\xB9]\x02\u01A6\u01A7\x05\xB1Y\x02\u01A7\u01A8\x05\xBD_\x02\u01A8" +
		"\u01A9\x05\xBB^\x02\u01A9\u01AA\x05\xA3R\x02\u01AAb\x03\x02\x02\x02\u01AB" +
		"\u01AC\x05\xC1a\x02\u01AC\u01AD\x05\x9DO\x02\u01AD\u01AE\x05\xB9]\x02" +
		"\u01AE\u01AF\x05\xBB^\x02\u01AFd\x03\x02\x02\x02\u01B0\u01B1\x05\xB9]" +
		"\x02\u01B1\u01B2\x05\xA5S\x02\u01B2\u01B3\x05\x9BN\x02\u01B3\u01B4\x05" +
		"\x9DO\x02\u01B4f\x03\x02\x02\x02\u01B5\u01B6\x05\xBB^\x02\u01B6\u01B7" +
		"\x05\xA5S\x02\u01B7\u01B8\x05\x99M\x02\u01B8\u01B9\x05\xA9U\x02\u01B9" +
		"\u01BA\x05\xB9]\x02\u01BAh\x03\x02\x02\x02\u01BB\u01BC\x05\xBB^\x02\u01BC" +
		"\u01BD\x05\xA5S\x02\u01BD\u01BE\x05\x99M\x02\u01BE\u01BF\x05\xA9U\x02" +
		"\u01BFj\x03\x02\x02\x02\u01C0\u01C1\x05\xB9]\x02\u01C1\u01C2\x05\x9DO" +
		"\x02\u01C2\u01C3\x05\x99M\x02\u01C3\u01C4\x05\xB1Y\x02\u01C4\u01C5\x05" +
		"\xAFX\x02\u01C5\u01C6\x05\x9BN\x02\u01C6\u01C7\x05\xB9]\x02\u01C7l\x03" +
		"\x02\x02\x02\u01C8\u01C9\x05\xB7\\\x02\u01C9\u01CA\x05\x9DO\x02\u01CA" +
		"\u01CB\x05\x9BN\x02\u01CB\u01CC\x05\xB9]\x02\u01CC\u01CD\x05\xBB^\x02" +
		"\u01CD\u01CE\x05\xB1Y\x02\u01CE\u01CF\x05\xAFX\x02\u01CF\u01D0\x05\x9D" +
		"O\x02\u01D0n\x03\x02\x02\x02\u01D1\u01D2\x05\xB3Z\x02\u01D2\u01D3\x05" +
		"\xBD_\x02\u01D3\u01D4\x05\xABV\x02\u01D4\u01D5\x05\xB9]\x02\u01D5\u01D6" +
		"\x05\x9DO\x02\u01D6p\x03\x02\x02\x02\u01D7\u01D8\x05\x9BN\x02\u01D8\u01D9" +
		"\x05\xB1Y\x02\u01D9r\x03\x02\x02\x02\u01DA\u01DB\x05\xC1a\x02\u01DB\u01DC" +
		"\x05\xB1Y\x02\u01DC\u01DD\x05\xB7\\\x02\u01DD\u01DE\x05\xABV\x02\u01DE" +
		"\u01DF\x05\x9BN\x02\u01DFt\x03\x02\x02\x02\u01E0\u01E1\x05\xB3Z\x02\u01E1" +
		"\u01E2\x05\xB7\\\x02\u01E2\u01E3\x05\xB1Y\x02\u01E3\u01E4\x05\xA1Q\x02" +
		"\u01E4\u01E5\x05\xB7\\\x02\u01E5\u01E6\x05\x95K\x02\u01E6\u01E7\x05\xAD" +
		"W\x02\u01E7v\x03\x02\x02\x02\u01E8\u01E9\x05\x9DO\x02\u01E9\u01EA\x05" +
		"\xAFX\x02\u01EA\u01EB\x05\x9BN\x02\u01EBx\x03\x02\x02\x02\u01EC\u01ED" +
		"\x05\xAFX\x02\u01ED\u01EE\x05\x95K\x02\u01EE\u01EF\x05\xADW\x02\u01EF" +
		"\u01F0\x05\x9DO\x02\u01F0z\x03\x02\x02\x02\u01F1\u01F2\x05\x9DO\x02\u01F2" +
		"\u01F3\x05\xBF`\x02\u01F3\u01F4\x05\x9DO\x02\u01F4\u01F5\x05\xB7\\\x02" +
		"\u01F5\u01F6\x05\xC5c\x02\u01F6|\x03\x02\x02\x02\u01F7\u01F8\x07.\x02" +
		"\x02\u01F8~\x03\x02\x02\x02\u01F9\u01FA\x07<\x02\x02\u01FA\x80\x03\x02" +
		"\x02\x02\u01FB\u01FC\x071\x02\x02\u01FC\x82\x03\x02\x02\x02\u01FD\u01FE" +
		"\x07/\x02\x02\u01FE\x84\x03\x02\x02\x02\u01FF\u0200\x07*\x02\x02\u0200" +
		"\x86\x03\x02\x02\x02\u0201\u0202\x07+\x02\x02\u0202\x88\x03\x02\x02\x02" +
		"\u0203\u0207\t\x02\x02\x02\u0204\u0206\t\x03\x02\x02\u0205\u0204\x03\x02" +
		"\x02\x02\u0206\u0209\x03\x02\x02\x02\u0207\u0205\x03\x02\x02\x02\u0207" +
		"\u0208\x03\x02\x02\x02\u0208\u020C\x03\x02\x02\x02\u0209\u0207\x03\x02" +
		"\x02\x02\u020A\u020C\x07,\x02\x02\u020B\u0203\x03\x02\x02\x02\u020B\u020A" +
		"\x03\x02\x02\x02\u020C\x8A\x03\x02\x02\x02\u020D\u020F\t\x04\x02\x02\u020E" +
		"\u020D\x03\x02\x02\x02\u020F\u0210\x03\x02\x02\x02\u0210\u020E\x03\x02" +
		"\x02\x02\u0210\u0211\x03\x02\x02\x02\u0211\x8C\x03\x02\x02\x02\u0212\u0218" +
		"\x07$\x02\x02\u0213\u0217\n\x05\x02\x02\u0214\u0215\x07^\x02\x02\u0215" +
		"\u0217\x07$\x02\x02\u0216\u0213\x03\x02\x02\x02\u0216\u0214\x03\x02\x02" +
		"\x02\u0217\u021A\x03\x02\x02\x02\u0218\u0216\x03\x02\x02\x02\u0218\u0219" +
		"\x03\x02\x02\x02\u0219\u021B\x03\x02\x02\x02\u021A\u0218\x03\x02\x02\x02" +
		"\u021B\u021C\x07$\x02\x02\u021C\x8E\x03\x02\x02\x02\u021D\u021E\x07/\x02" +
		"\x02\u021E\u021F\x07/\x02\x02\u021F\u0223\x03\x02\x02\x02\u0220\u0222" +
		"\n\x06\x02\x02\u0221\u0220\x03\x02\x02\x02\u0222\u0225\x03\x02\x02\x02" +
		"\u0223\u0221\x03\x02\x02\x02\u0223\u0224\x03\x02\x02\x02\u0224\u0226\x03" +
		"\x02\x02\x02\u0225\u0223\x03\x02\x02\x02\u0226\u0227\bH\x02\x02\u0227" +
		"\x90\x03\x02\x02\x02\u0228\u022A\t\x07\x02\x02\u0229\u0228\x03\x02\x02" +
		"\x02\u022A\u022B\x03\x02\x02\x02\u022B\u0229\x03\x02\x02\x02\u022B\u022C" +
		"\x03\x02\x02\x02\u022C\u022D\x03\x02\x02\x02\u022D\u022E\bI\x02\x02\u022E" +
		"\x92\x03\x02\x02\x02\u022F\u0230\x06J\x02\x02\u0230\u0231\v\x02\x02\x02" +
		"\u0231\u0232\x03\x02\x02\x02\u0232\u0233\b";
	private static readonly _serializedATNSegment1: string =
		"J\x02\x02\u0233\x94\x03\x02\x02\x02\u0234\u0235\t\b\x02\x02\u0235\x96" +
		"\x03\x02\x02\x02\u0236\u0237\t\t\x02\x02\u0237\x98\x03\x02\x02\x02\u0238" +
		"\u0239\t\n\x02\x02\u0239\x9A\x03\x02\x02\x02\u023A\u023B\t\v\x02\x02\u023B" +
		"\x9C\x03\x02\x02\x02\u023C\u023D\t\f\x02\x02\u023D\x9E\x03\x02\x02\x02" +
		"\u023E\u023F\t\r\x02\x02\u023F\xA0\x03\x02\x02\x02\u0240\u0241\t\x0E\x02" +
		"\x02\u0241\xA2\x03\x02\x02\x02\u0242\u0243\t\x0F\x02\x02\u0243\xA4\x03" +
		"\x02\x02\x02\u0244\u0245\t\x10\x02\x02\u0245\xA6\x03\x02\x02\x02\u0246" +
		"\u0247\t\x11\x02\x02\u0247\xA8\x03\x02\x02\x02\u0248\u0249\t\x12\x02\x02" +
		"\u0249\xAA\x03\x02\x02\x02\u024A\u024B\t\x13\x02\x02\u024B\xAC\x03\x02" +
		"\x02\x02\u024C\u024D\t\x14\x02\x02\u024D\xAE\x03\x02\x02\x02\u024E\u024F" +
		"\t\x15\x02\x02\u024F\xB0\x03\x02\x02\x02\u0250\u0251\t\x16\x02\x02\u0251" +
		"\xB2\x03\x02\x02\x02\u0252\u0253\t\x17\x02\x02\u0253\xB4\x03\x02\x02\x02" +
		"\u0254\u0255\t\x18\x02\x02\u0255\xB6\x03\x02\x02\x02\u0256\u0257\t\x19" +
		"\x02\x02\u0257\xB8\x03\x02\x02\x02\u0258\u0259\t\x1A\x02\x02\u0259\xBA" +
		"\x03\x02\x02\x02\u025A\u025B\t\x1B\x02\x02\u025B\xBC\x03\x02\x02\x02\u025C" +
		"\u025D\t\x1C\x02\x02\u025D\xBE\x03\x02\x02\x02\u025E\u025F\t\x1D\x02\x02" +
		"\u025F\xC0\x03\x02\x02\x02\u0260\u0261\t\x1E\x02\x02\u0261\xC2\x03\x02" +
		"\x02\x02\u0262\u0263\t\x1F\x02\x02\u0263\xC4\x03\x02\x02\x02\u0264\u0265" +
		"\t \x02\x02\u0265\xC6\x03\x02\x02\x02\u0266\u0267\t!\x02\x02\u0267\xC8" +
		"\x03\x02\x02\x02\n\x02\u0207\u020B\u0210\u0216\u0218\u0223\u022B\x03\x02" +
		"\x03\x02";
	public static readonly _serializedATN: string = Utils.join(
		[
			SFMLLexer._serializedATNSegment0,
			SFMLLexer._serializedATNSegment1,
		],
		"",
	);
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!SFMLLexer.__ATN) {
			SFMLLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(SFMLLexer._serializedATN));
		}

		return SFMLLexer.__ATN;
	}

}

